@page "/"
@page "/index.html"
@inject IJSRuntime JsRuntime
@using nkast.Wasm.Canvas

<PageTitle>AiAssaultArena.Web</PageTitle>

@if (!Client.IsConnected)
{
    <div>
        <input @bind-value="@Url">
        <button @onclick="ConnectAsync">Connect</button>
    </div>
    return;
}

<div style="height: 3rem">
</div>
<div id="canvasHolder" style="
    margin:0%;
    position: fixed;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    width:100vw;
    height:100vh;
">
    <canvas id="theCanvas" style="touch-action:none;"></canvas>
</div>

@if (!Client.IsConnected || Game is null || Game.Tanks is null)
{
    return;
}

<div style="position: absolute; top: 0; left: 0; color: white; background: #0008; padding: 1rem; height: 100vh;">

    @if (!Game.Tanks.Any())
    {
        <div>
            <div>
                Available tanks:
            </div>
            <div style="display: flex; flex-direction: column; gap: 1rem">
                <div>
                    First Tank
                </div>
                <div style="display: flex; flex-direction: column; gap: 1rem">
                    @foreach (var (id, tank) in Game.ConnectedTanks)
                    {
                        var tankId = id;
                        <button @onclick="() => TankAId = id" style="background: @(TankAId != tankId ? "white" : "green")">
                            @tank
                        </button>
                    }
                </div>

                <div>
                    Second Tank
                </div>
                <div style="display: flex; flex-direction: column; gap: 1rem">
                    @foreach (var (id, tank) in Game.ConnectedTanks)
                    {
                        var tankId = id;
                        <button @onclick="() => TankBId = id" style="background: @(TankBId != tankId ? "white" : "green")">
                            @tank
                        </button>
                    }
                </div>

                <button @onclick="() => Client.Server.StartMatchAsync(TankAId, TankBId)">
                    Start
                </button>
            </div>
        </div>
    }
    else
    {
        @foreach (var tank in Game.Tanks)
        {
            @if (!Game.ConnectedTanks.ContainsKey(tank.Id))
            {
                continue;
            }
            <div>
                <div>
                    @Game.ConnectedTanks[tank.Id]
                </div>
                <div>
                    <div>
                        Health
                    </div>

                    <progress max="10000" value="@((int)(tank.Health * 100))" />
                </div>
                <div>
                    <div>
                        Cooldown
                    </div>

                    <progress max="100" value="@((int)(tank.CurrentTurretHeat * 100))" />
                </div>
            </div>
        }
        <div>
            <div>
                Server info
            </div>
            <div>
                @(Game.UpdatesPerSecond / 1000) kups
            </div>

            <div>
                @Game.Elapsed
            </div>
        </div>
    }
</div>