@page "/"
@page "/index.html"
@inject IJSRuntime JsRuntime
@using nkast.Wasm.Canvas

<PageTitle>AiAssaultArena.Web</PageTitle>

@if (!Client.IsConnected)
{
    <div class="card dark">
        <h3>
            Connect to a server
        </h3>
        <input class="lighter" @bind-value="@Url">
        <button class="green" @onclick="ConnectAsync">Connect</button>
    </div>
    return;
}

<div id="canvasHolder">
    <canvas id="theCanvas"></canvas>
</div>

@if (!Client.IsConnected || Game is null || Game.Tanks is null)
{
    return;
}


@if (!Game.Tanks.Any())
{
    <div class="dark sidebar">
        <h5>
            First Tank
        </h5>
        <div class="button-container">
            @foreach (var (id, tank) in Game.ConnectedTanks)
            {
                var tankId = id;
                var color = "light";
                var disabled = false;
                if (tankId == TankAId)
                {
                    color = "red";
                }
                else if (tankId == TankBId)
                {
                    disabled = true;
                    color = "darker";
                }
                <button @onclick="() => TankAId = id" class="@color" disabled="@disabled">
                    @tank
                </button>
            }
            <button @onclick="() => TankAId = null" class="dark">
                None
            </button>
        </div>

        <h5>
            Second Tank
        </h5>
        <div class="button-container">
            @foreach (var (id, tank) in Game.ConnectedTanks)
            {
                var tankId = id;
                var color = "light";
                var disabled = false;
                if (tankId == TankBId)
                {
                    color = "green";
                }
                else if (tankId == TankAId)
                {
                    disabled = true;
                    color = "darker";
                }
                <button @onclick="() => TankBId = id" class="@color" disabled="@disabled">
                    @tank
                </button>
            }

            <button @onclick="() => TankBId = null" class="dark">
                None
            </button>
        </div>
        @{
            var canStart = TankAId.HasValue && TankBId.HasValue;
        }
        <button class="@(canStart ? "blue" : "darker")" @onclick="() => Client.Server.StartMatchAsync(TankAId.Value, TankBId.Value)" disabled="@(!canStart)">
            Start match
        </button>

    </div>
}
else if (Game.ConnectedTanks.Any() && Game.Tanks.Count == 2)
{
    <div class="sidebar sidebar--slim">

        <div class="info">
            <div class="info--header darker">
                <h4>
                    Match info
                </h4>
            </div>
            <div class="info--body dark">
                <div>
                    <div>
                        Remaining
                    </div>
                    <div class="progress-bar progress-bar--blue light">
                        <div class="progress-bar--progress" style="width: @((int)(100 - (100 * Game.Elapsed.TotalMilliseconds / 60000)))%">
                        </div>
                    </div>
                </div>
                @if (Game.IsGameOver)
                {
                    <button @onclick="() => Client.Server.StartMatchAsync(TankAId.Value, TankBId.Value)" class="green">Restart</button>
                    <button @onclick="() => Game.Clear()" class="red">Select new tanks</button>
                }
            </div>
        </div>
        @{
            try
            {
                var tankA = Game.Tanks[0];
                var tankAName = Game.ConnectedTanks[tankA.Id];

                <div class="info">
                    <div class="info--header red">
                        <h4>
                            @tankAName
                        </h4>
                    </div>
                    <div class="info--body dark">
                        <div>
                            <div>
                                Health
                            </div>
                            <div class="progress-bar progress-bar--@(tankA.Health > 50 ? "green" : "red") light">
                                <div class="progress-bar--progress" style="width: @(tankA.Health)%">
                                </div>
                            </div>
                        </div>
                        <div>
                            <div>
                                Turret heat
                            </div>
                            <div class="progress-bar progress-bar--@(tankA.CurrentTurretHeat > 80 ? "red" : "blue") light">
                                <div class="progress-bar--progress" style="width: @((int)tankA.CurrentTurretHeat)%">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            catch
            {

            }

            try
            {
                var tankB = Game.Tanks[1];
                var tankBName = Game.ConnectedTanks[tankB.Id];
                <div class="info">
                    <div class="info--header green">
                        <h4>
                            @tankBName
                        </h4>
                    </div>
                    <div class="info--body dark">
                        <div>
                            <div>
                                Health
                            </div>
                            <div class="progress-bar progress-bar--@(tankB.Health > 50 ? "green" : "red") light">
                                <div class="progress-bar--progress" style="width: @(tankB.Health)%">
                                </div>
                            </div>
                        </div>
                        <div>
                            <div>
                                Turret heat
                            </div>
                            <div class="progress-bar progress-bar--@(tankB.CurrentTurretHeat > 80 ? "red" : "blue") light">
                                <div class="progress-bar--progress" style="width: @((int)tankB.CurrentTurretHeat)%">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            catch
            {
            }
        }
    </div>
}

<div class="scale">
    <button @onclick="() => Game.ZoomBy(0.1f)" class="light">+</button>
    <button @onclick="() => Game.ZoomBy(-0.1f)" class="light">-</button>
</div>