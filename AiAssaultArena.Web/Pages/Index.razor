@page "/"
@page "/index.html"
@inject IJSRuntime JsRuntime
@using nkast.Wasm.Canvas

<PageTitle>AiAssaultArena.Web</PageTitle>

@if (!Client.IsConnected)
{
    <div class="card dark">
        <h3>
            Select your server
        </h3>
        <input class="light" @bind-value="@Url">
        <button class="red" @onclick="ConnectAsync">Connect</button>
    </div>
    return;
}

<div id="canvasHolder">
    <canvas id="theCanvas"></canvas>
</div>

@if (!Client.IsConnected || Game is null || Game.Tanks is null)
{
    return;
}


@if (!Game.Tanks.Any())
{
    <div class="dark sidebar">
        <h5>
            First Tank
        </h5>
        <div class="button-container">
            @foreach (var (id, tank) in Game.ConnectedTanks)
            {
                var tankId = id; 
                var color = "light";
                var disabled = false;
                if (tankId == TankAId)
                {
                    color = "red";
                }
                else if (tankId == TankBId)
                {
                    disabled = true;
                    color = "dark";
                }
                <button @onclick="() => TankAId = id" class="@color" disabled="@disabled">
                    @tank
                </button>
            }
        </div>

        <h5>
            Second Tank
        </h5>
        <div class="button-container">
            @foreach (var (id, tank) in Game.ConnectedTanks)
            {
                var tankId = id;
                var color = "light";
                var disabled = false;
                if (tankId == TankBId)
                {
                    color = "green";
                }
                else if (tankId == TankAId)
                {
                    disabled = true;
                    color = "dark";
                }
                <button @onclick="() => TankBId = id" class="@color" disabled="@disabled">
                    @tank
                </button>
            }
        </div>

        <button class="light" @onclick="() => Client.Server.StartMatchAsync(TankAId, TankBId)">
            Start
        </button>

    </div>
}
else if (Game.ConnectedTanks.Any() && Game.Tanks.Count == 2)
{
    var tankA = Game.Tanks[0];
    var tankAName = Game.ConnectedTanks[tankA.Id];

    var tankB = Game.Tanks[1];
    var tankBName = Game.ConnectedTanks[tankB.Id];
    <div class="sidebar sidebar--slim">
        <div class="info card red">
            <h4>
                @tankAName
            </h4>
            <div>
                <div>
                    Health
                </div>
                <div class="progress-bar progress-bar--red light">
                    <div class="progress-bar--progress" style="width: @(tankA.Health)%">
                    </div>
                </div>
            </div>
            <div>
                <div>
                    Turret heat
                </div>
                <div class="progress-bar progress-bar--dark light">
                    <div class="progress-bar--progress" style="width: @((int)((tankA.CurrentTurretHeat / 0.5f) * 100))%">
                    </div>
                </div>
            </div>
        </div>
        <div class="info card green">
            <h4>
                @tankBName
            </h4>
            <div>
                <div>
                    Health
                </div>
                <div class="progress-bar progress-bar--red light">
                    <div class="progress-bar--progress" style="width: @(tankB.Health)%">
                    </div>
                </div>
            </div>
            <div>
                <div>
                    Turret heat
                </div>
                <div class="progress-bar progress-bar--dark light">
                    <div class="progress-bar--progress" style="width: @((int)((tankB.CurrentTurretHeat / 0.5f) * 100))%">
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="server-stats card light">
        <h5>
            Server info
        </h5>
        <div class="server-stats--data">
            <div>
                @Game.UpdatesPerSecond ups
            </div>

            <div>
                @Game.Elapsed.ToString(@"mm\:ss\.ff")
            </div>
        </div>
    </div>
}